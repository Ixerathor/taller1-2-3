/*ANTHONY BARAHONA
  CRISTIAN DURAN
  MAURICIO LOPEZ

BUSCAR ENTRE EL CODIGO: SEMAFORO, SENSOR, PEAJE
*/



// ***** SEMAFORO *****



// conexiones en la placa arduino
#define LEDGREEN1 2
#define LEDYELLOW1 3
#define LEDRED1 4
#define LEDVERDE2 5
#define LEDAMARILLO2 6
#define LEDROJO2 7
#define PULSADOR1 8
#define PULSADOR2 9

// Definimos Variables 
bool activo1 = true; // Indica si el semáforo 1 está activo, de lo contrario será el semáforo 2
int tiempoCambio = 1500; // Tiempo de espera entre transición de LEDs
int tiempoEspera = 5000; // Tiempo de espera hasta comenzar transición

void setup() {
  // Iniciamos el monitor serie
  Serial.begin(9600);

  // Salida de los pines
  pinMode(LEDGREEN1, OUTPUT);
  pinMode(LEDYELLOW1, OUTPUT);
  pinMode(LEDRED1, OUTPUT);
  pinMode(LEDVERDE2, OUTPUT);
  pinMode(LEDAMARILLO2, OUTPUT);
  pinMode(LEDROJO2, OUTPUT);
//Entrada de los pines
  pinMode(PULSADOR1, INPUT);
  pinMode(PULSADOR2, INPUT);

  // Apagamos todos los LEDs
  digitalWrite(LEDGREEN1, LOW);
  digitalWrite(LEDYELLOW1, LOW);
  digitalWrite(LEDRED1, LOW);
  digitalWrite(LEDVERDE2, LOW);
  digitalWrite(LEDAMARILLO2, LOW);
  digitalWrite(LEDROJO2, LOW);

  // Estado inicial: semáforo 1 abierto o encendido, semáforo 2 cerrado o en espera
  digitalWrite(LEDGREEN1, HIGH);
  digitalWrite(LEDROJO2, HIGH);
}

void loop() {
  // Definimos semáforo que tengamos activo
  if (activo1)
  {
    // Encendido el semáforo 1, comprobamos con el pulsador 2
    int valor2 = digitalRead(PULSADOR2);

    // Si hay un carro o un automovil esperando, ejercemos presión en el pulsador
    if (valor2 == HIGH)
    {
      // Encender semáforo 2
      encendersemaforo2();

      // Semáforo 2 activo
      activo1 = false;
    }
  }
  else
  {
    // Está encendido el semáforo 1, comprobamos el pulsador 1
    int valor1 = digitalRead(PULSADOR1);

    // Si hay un coche esperando, pulsador pulsado
    if (valor1 == HIGH)
    {
      // Encender semáforo 1
      encendersemaforo1();

      // Semáforo 1 activo
      activo1 = true;
    }
  }
}

void encendersemaforo2()
{
  // Apagamos semáforo 1
  // Esperamos
  delay(tiempoEspera);

  // Pasamos a luz amarilla
  digitalWrite(LEDGREEN1, LOW);
  digitalWrite(LEDYELLOW1, HIGH);

  // Esperamos
  delay(tiempoCambio);

  // Pasamos a luz roja
  digitalWrite(LEDYELLOW1, LOW);
  digitalWrite(LEDRED1, HIGH);

  // Encendemos semáforo 2
  // Esperamos
  delay(tiempoCambio);

  // Pasamos a luz amarilla
  digitalWrite(LEDROJO2, LOW);
  digitalWrite(LEDVERDE2, HIGH);
}

void encendersemaforo1()
{
  // Apagamos semáforo 2
  // Esperamos
  delay(tiempoEspera);

  // Pasamos a luz amarilla
  digitalWrite(LEDVERDE2, LOW);
  digitalWrite(LEDAMARILLO2, HIGH);

  // Esperamos
  delay(tiempoCambio);

  // Pasamos a luz roja
  digitalWrite(LEDAMARILLO2, LOW);
  digitalWrite(LEDROJO2, HIGH);

  // Encendemos semáforo 1
  // Esperamos
  delay(tiempoCambio);

  // Pasamos a luz amarilla
  digitalWrite(LEDRED1, LOW);
  digitalWrite(LEDGREEN1, HIGH);
}




// ***** SENSOR *****




//Libreria y definicion de pines lcd 
#include <LiquidCrystal.h>
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

// Constantes
const int sensorlm35 = A0;

 // Variables
int milivolts;
 
// Inicialización
void setup() {
 Serial.begin(9600);
 lcd.begin(16,2); //dimensiones del lcd 
 delay(400);
 lcd.setCursor(0,2);
 lcd.print("Temperatura");
 lcd.setCursor(13,2);
 lcd.print((char)223);
 lcd.setCursor(14,2);
 lcd.print("C");
 pinMode(8,OUTPUT);
 pinMode(9,OUTPUT);
}
 
// Ciclo infinito
void loop() {
// Lectura del sensor de temperatura
  milivolts = analogRead(sensorlm35);
  float temperatura = (milivolts*500.0)/1023;
  Serial.print(temperatura); 
  delay(400);

//Impresión en LCD temperatura
 lcd.setCursor(0,0);
 lcd.print(temperatura);
 lcd.setCursor(7,0);
 lcd.print( "Grados");
   
 // Condiciones para encendido de leds 
 if (temperatura < 27){ // Menor a 27° encendido led azul 
  digitalWrite(8,HIGH);  
} 
 else
 digitalWrite(8,LOW); 
  
 if (temperatura > 29){ // Mayor a 29° encendido led rojo 
  digitalWrite(9,HIGH);  
} 
 else
  digitalWrite(9,LOW); 
} 





// ***** PEAJE *****





#include <Servo.h>
#define Pecho 11
#define Ptrig 12
long duracion, distancia; 
int ledrojo= 6;
int ledverde= 7;

// Declaramos la variable para controlar el servo
Servo servoMotor;
 
void setup() {
  // Iniciamos el monitor serie para mostrar el resultado
  Serial.begin(9600);
  pinMode(ledrojo, OUTPUT);
  pinMode(ledverde, OUTPUT);
 
  // Iniciamos el servo para que empiece a trabajar con el pin 9
  servoMotor.attach(9);
  servoMotor.write(0);

  //ultrasonico
   pinMode (Pecho, INPUT);
   pinMode (Ptrig, OUTPUT);
}

void loop() {
  digitalWrite(Ptrig, LOW);
  delayMicroseconds(2);
  digitalWrite(Ptrig, HIGH);
  delayMicroseconds(10);
  digitalWrite(Ptrig, LOW);

  duracion = pulseIn(Pecho, HIGH);
  distancia = (duracion/2)/29;
  Serial.print(distancia);
  Serial.println("cm");
  if ((distancia >5 ) or (distancia<0)){
    servoMotor.write(0);
    digitalWrite(ledrojo, HIGH);
    digitalWrite(ledverde, LOW);
    // Esperamos 1 segundo
    delay(1000);
  
  }
  else
  {
    // Desplazamos a la posición 90º
    servoMotor.write(90);
    digitalWrite(ledverde, HIGH);
    digitalWrite(ledrojo, LOW);
    // Esperamos 1 segundo
    delay(1000);
  }

}